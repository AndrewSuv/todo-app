{"version":3,"sources":["LCO-logo-white.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","src","logo","width","height","className","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","name","checked","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,MAA0B,2C,eC2H1BA,E,kDAnHb,WAAYC,GAAO,IAAD,8BAEf,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAO,IALM,E,2CAWpB,SAAQC,GACN,GAAkB,KAAdA,EAAkB,CACpB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAGNN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAGVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAOb,SAAWG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAEA,EAAKV,KAAOA,KAClDK,KAAKE,SAAS,CACZT,KAAMU,M,yBAIV,SAAYG,GACZN,KAAKE,SAAS,CAACV,QAAQc,M,oBAOtB,WAAS,IAAD,OACN,OACC,gCAEA,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,SAEnD,oBAAIA,UAAU,YAAd,sBACJ,sBAAKA,UAAU,YAAf,8BAEE,uBACA,uBACAC,KAAK,OACJD,UAAa,aACbE,YAAc,eACdC,UAAQ,EACRhB,MAASE,KAAKT,MAAMC,QACpBuB,SAAY,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOpB,UAG9C,wBAEAa,UAAU,UACVQ,QAAS,kBAAM,EAAKC,QAAQ,EAAK7B,MAAMC,UACvC6B,UAAarB,KAAKT,MAAMC,QAAQ8B,OAJhC,sBASA,qBAAKX,UAAU,OAAf,SACE,+BAEIX,KAAKT,MAAME,KAAK8B,KAAI,SAAAlB,GACnB,OACP,+BACE,uBAAOO,KAAK,WACZY,KAAM,SACNC,QAASpB,EAAKN,OACdgB,SAAU,eAIXV,EAAKP,MACN,wBACAa,UAAU,MACVQ,QAAS,kBAAI,EAAKO,WAAWrB,EAAKV,KAFlC,sBATSU,EAAKV,OAkBV,+BACE,uBAAOiB,KAAK,aADd,wBAGE,wBAAQD,UAAU,MAAlB,sC,GAxGYgB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a88123f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LCO-logo-white.fc122073.png\";","import React from 'react';\nimport logo from \"./LCO-logo-white.png\";\nimport \"./App.css\";\n\n\n\nclass App extends React.Component{\n\n  constructor(props){\n   \n     super(props);\n     this.state = {\n       newItem: \"\",\n       list : []\n     }\n\n\n  }\n\naddItem(todoValue){\n  if (todoValue !== \"\") {\n    const newItem = {\n      id: Date.now(),\n      value: todoValue,\n      isDone: false\n    };\n\n  const list = [...this.state.list];\n  list.push(newItem);\n\n\n  this.setState({\n    list,\n    newItem: \"\"\n  });\n\n\n  }\n}\n\ndeleteItem(id){\n  const list = [...this.state.list];\n  const updatedlist = list.filter(item=>item.id !== id);\n  this.setState({\n    list: updatedlist\n  })\n}\n\nupdateInput(input){\nthis.setState({newItem:input});\n}\n\n\n\n\n\n render(){\n   return (\n    <div>\n     \n    <img src={logo} width=\"100\" height=\"100\" className=\"logo\"/>\n\n    <h1 className=\"app-title\">TODO APP</h1>\n<div className=\"container\">\n  Add an Item......\n  <br/>\n  <input \n  type=\"text\"\n   className  = \"input-text\"\n   placeholder = \"write a todo\"\n   required\n   value = {this.state.newItem}\n   onChange = {e => this.updateInput(e.target.value)}\n  />\n\n<button \n\nclassName=\"add-btn\"\nonClick={() => this.addItem(this.state.newItem)}\ndisabled = {!this.state.newItem.length}\n>\nAdd TODO\n</button>\n\n<div className=\"list\">\n  <ul>\n\n     {this.state.list.map(item =>{\n       return(\n<li key={item.id}>\n  <input type=\"checkbox\" \n  name =\"isDone\"\n  checked={item.isDone}\n  onChange={()=> {}}\n\n  />\n\n{item.value}\n<button\nclassName=\"btn\"\nonClick={()=>this.deleteItem(item.id)}\n>Delete</button>\n</li>\n       );\n     })}\n\n\n    <li>\n      <input type=\"checkbox\" />\n      Record youtube videos\n      <button className=\"btn\">Delete</button>\n    </li>\n  </ul>\n</div>\n\n</div>\n\n  </div>\n   )\n   \n }\n\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}